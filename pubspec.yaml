name: flutter_app_template_workspace
environment:
  sdk: ^3.7.2

workspace:
  # apps
  - apps/app
  # cores
  - packages/cores/core
  - packages/cores/designsystem
  # features
  - packages/features/remote_config
  # shared
  - packages/shared/config
  - packages/shared/dependencies
  - packages/shared/i18n

dev_dependencies:
  mason_cli: ^0.1.2
  melos: ^7.0.0-dev.7

melos:
  sdkPath: .fvm/flutter_sdk

  command:
    bootstrap:
      environment:
        sdk: ^3.7.2
        flutter: ^3.29.2
      dependencies:
        equatable: ^2.0.7
        flutter_hooks: ^0.21.2
        flutter_riverpod: ^2.6.1
        freezed_annotation: ^3.0.0
        hooks_riverpod: ^2.6.1
        intl: ^0.20.2
        json_annotation: ^4.9.0
        go_router: ^14.8.1
      dev_dependencies:
        build_runner: ^2.4.15
        custom_lint: ^0.7.5
        freezed: ^3.0.4
        json_serializable: ^6.9.4
        riverpod_generator: ^2.6.5
        riverpod_lint: ^2.6.5
        test: ^1.25.15
        flutter_gen_runner: ^5.10.0

  scripts:
    gen:all:
      description: Generate all codes
      run: dart run build_runner build -d
      exec:
        orderDependents: true
      packageFilters:
        dependsOn: build_runner
    gen:
      description: Code generation using build_runner
      run: dart run build_runner build -d
      exec:
        orderDependents: true
      packageFilters:
        dependsOn: build_runner
        ignore:
          - packages/shared/**
    gen:env:
      description: Run build_runner in all of the packages that depends on it.
      run: dart run build_runner build -d
      exec:
        orderDependents: true
      packageFilters:
        dependsOn: envied_generator
    gen:i18n:
      description: Generate internationalization files
      run: dart run build_runner build -d
      exec:
        orderDependents: true
      packageFilters:
        scope: shared_i18n
        dependsOn: slang_build_runner

    test:
      description: Run tests with coverage and random ordering
      run: flutter test
      exec:
        concurrency: 1
      packageFilters:
        dependsOn: flutter_test
        dirExists: test

    report:test:
      description: Generate test coverage report
      steps:
        - report:test:flutter
        - report:test:dart
    report:test:flutter:
      description: Generate flutter test report
      run: flutter test --no-pub --machine > test_report.log
      exec:
        concurrency: 1
      packageFilters:
        dependsOn: flutter_test
        dirExists: test
    report:test:dart:
      description: Generate dart test report
      run: dart test --file-reporter="json:test_report.log"
      exec:
        concurrency: 1
      packageFilters:
        dependsOn: test
        dirExists: test
    ci:report:custom_lint:
      description: Report custom_lint result
      exec: bash "$MELOS_ROOT_PATH/scripts/report-custom-lint-ci.sh"
      packageFilters:
        dependsOn: custom_lint
